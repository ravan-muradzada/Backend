BufferedWriter is a Java class used for writing text to a character output stream more efficiently by adding a buffer to the writing process. Like BufferedReader, it improves performance by reducing the number of actual write operations to the underlying output device (like a file or a network). It is part of the java.io package and is typically used when writing large amounts of data to files or output streams.

Constructor:

-BufferedWriter(Writer out): Wraps a Writer (such as FileWriter) with buffering.
-BufferedWriter(Writer out, int sz): Creates a BufferedWriter with a custom buffer size.


Key methods:

-void write(String str): Writes a string to the buffer.
-void write(char[] cbuf, int off, int len): Writes a portion of a character array to the buffer.
-void newLine(): Writes a newline to the output stream.
-void flush(): Forces any buffered output to be written to the underlying output stream.
-void close(): Closes the writer and releases the resources associated with it.


======================================================
public static void main(String[] args) throws IOException{

        try(BufferedWriter bw = new BufferedWriter(new FileWriter("myfile.txt", true))){
            //bw.write("Welllcome!");
        }

        try(BufferedReader br = new BufferedReader(new FileReader("myfile.txt"))){
            int data;

            while ((data = br.read()) != -1){
                System.out.print((char) data);
            }
        }

    }
======================================================

